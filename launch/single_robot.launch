<launch>
    <arg name="namespace"                       default="default_namespace" />
    <arg name="scan_topic"                      default="base_scan" />
    <arg name="map_frame"                       default="/map" />
    <arg name="map_topic"                       default="/map" />
    <arg name="odom_frame"                      default="odom" />
    <arg name="base_frame"                      default="base_link" />
    <arg name="move_base_config_package"        default="multi_robot_path_planner" />
    <arg name="move_base_config_path"           default="move_base_config/stage/dumper" />
    <arg name="localization_package"            default="fake_localization" />
    <arg name="localization_footprint_frame"    default="base_link" />

    <arg name="initial_pose_x"                  default="0" />
    <arg name="initial_pose_y"                  default="0" />
    <arg name="initial_pose_a"                  default="0" />

    <group ns="$(arg namespace)">
        <!-- Move Base -->
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
            <remap from="map" to="$(arg map_frame)" />
            <param name="controller_frequency" value="10.0" />

            <!-- Set some params from args so files don't need to be changed if frames get renamed -->
            <rosparam param="global_frame"      subst_value="True" ns="global_costmap">$(arg map_frame)</rosparam>
            <rosparam param="robot_base_frame"  subst_value="True" ns="global_costmap">$(arg base_frame)</rosparam>
            <rosparam param="global_frame"      subst_value="True" ns="local_costmap">$(arg odom_frame)</rosparam>
            <rosparam param="robot_base_frame"  subst_value="True" ns="local_costmap">$(arg base_frame)</rosparam>

            <rosparam file="$(eval find(move_base_config_package) + '/' + move_base_config_path + '/costmap_common_params.yaml')" command="load" ns="global_costmap" />
            <rosparam file="$(eval find(move_base_config_package) + '/' + move_base_config_path + '/costmap_common_params.yaml')" command="load" ns="local_costmap" />
            <rosparam file="$(eval find(move_base_config_package) + '/' + move_base_config_path + '/local_costmap_params.yaml')" command="load" />
            <rosparam file="$(eval find(move_base_config_package) + '/' + move_base_config_path + '/global_costmap_params.yaml')" command="load" />
            <rosparam file="$(eval find(move_base_config_package) + '/' + move_base_config_path + '/base_local_planner_params.yaml')" command="load" />
        </node>

        <!-- AMCL -->
        <node pkg="amcl" type="amcl" name="amcl" if="$(eval localization_package == 'amcl')">
            <remap from="scan"                      to="$(arg scan_topic)" />
            <remap from="map"                       to="$(arg map_topic)" />

            <param name="tf_broadcast"              value="true" />
            <param name="use_map_topic"             value="true" />

            <param name="odom_frame_id"             value="$(arg odom_frame)" />
            <param name="base_frame_id"             value="$(arg base_frame)" />
            <param name="global_frame_id"           value="$(arg map_frame)" />

            <!-- Publish scans from best pose at a max of 10 Hz -->
            <param name="odom_model_type"           value="diff-corrected" />
            <param name="odom_alpha5"               value="0.1" />
            <param name="gui_publish_rate"          value="10.0" />
            <param name="laser_max_beams"           value="60" />
            <param name="laser_max_range"           value="12.0" />
            <param name="min_particles"             value="500" />
            <param name="max_particles"             value="2000" />
            <param name="kld_err"                   value="0.05" />
            <param name="kld_z"                     value="0.99" />
            <param name="odom_alpha1"               value="0.2" />
            <param name="odom_alpha2"               value="0.2" />
            <!-- translation std dev, m -->
            <param name="odom_alpha3"               value="0.2" />
            <param name="odom_alpha4"               value="0.2" />
            <param name="laser_z_hit"               value="0.5" />
            <param name="laser_z_short"             value="0.05" />
            <param name="laser_z_max"               value="0.05" />
            <param name="laser_z_rand"              value="0.5" />
            <param name="laser_sigma_hit"           value="0.2" />
            <param name="laser_lambda_short"        value="0.1" />
            <param name="laser_model_type"          value="likelihood_field" />
            <!-- <param name="laser_model_type" value="beam" /> -->
            <param name="laser_likelihood_max_dist" value="2.0" />
            <param name="update_min_d"              value="0.25" />
            <param name="update_min_a"              value="0.2" />
            <param name="resample_interval"         value="1" />
            <!-- Increase tolerance because the computer can get quite busy -->
            <param name="transform_tolerance"       value="1.0" />
            <param name="recovery_alpha_slow"       value="0.0" />
            <param name="recovery_alpha_fast"       value="0.0" />
            <param name="initial_pose_x"            value="$(arg initial_pose_x)" />
            <param name="initial_pose_y"            value="$(arg initial_pose_y)" />
            <param name="initial_pose_a"            value="$(arg initial_pose_a)" />
        </node>

        <!-- Fake Localization-->
        <node pkg="fake_localization" type="fake_localization" name="fake_localization" if="$(eval localization_package == 'fake_localization')">
            <remap from="scan"                      to="$(arg scan_topic)" />
            <remap from="map"                       to="$(arg map_topic)" />

            <param name="odom_frame_id"             value="$(arg odom_frame)" />
            <param name="base_frame_id"             value="$(arg base_frame)" />
            <param name="global_frame_id"           value="$(arg map_frame)" />
        </node>
    </group>
</launch>
